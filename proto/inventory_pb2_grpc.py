# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import inventory_pb2 as inventory__pb2


class InventoryServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetInventory = channel.unary_unary(
                '/inventory.InventoryService/GetInventory',
                request_serializer=inventory__pb2.Empty.SerializeToString,
                response_deserializer=inventory__pb2.InventoryList.FromString,
                )
        self.UpdateInventory = channel.unary_unary(
                '/inventory.InventoryService/UpdateInventory',
                request_serializer=inventory__pb2.UpdateRequest.SerializeToString,
                response_deserializer=inventory__pb2.UpdateResponse.FromString,
                )
        self.StreamInventoryChanges = channel.unary_stream(
                '/inventory.InventoryService/StreamInventoryChanges',
                request_serializer=inventory__pb2.Empty.SerializeToString,
                response_deserializer=inventory__pb2.InventoryList.FromString,
                )
        self.ReplicateInventory = channel.unary_unary(
                '/inventory.InventoryService/ReplicateInventory',
                request_serializer=inventory__pb2.UpdateRequest.SerializeToString,
                response_deserializer=inventory__pb2.Empty.FromString,
                )
        self.Heartbeat = channel.unary_unary(
                '/inventory.InventoryService/Heartbeat',
                request_serializer=inventory__pb2.HeartbeatRequest.SerializeToString,
                response_deserializer=inventory__pb2.HeartbeatResponse.FromString,
                )


class InventoryServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetInventory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateInventory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamInventoryChanges(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReplicateInventory(self, request, context):
        """Replication
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Heartbeat(self, request, context):
        """Heartbeats and leader detection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InventoryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInventory,
                    request_deserializer=inventory__pb2.Empty.FromString,
                    response_serializer=inventory__pb2.InventoryList.SerializeToString,
            ),
            'UpdateInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateInventory,
                    request_deserializer=inventory__pb2.UpdateRequest.FromString,
                    response_serializer=inventory__pb2.UpdateResponse.SerializeToString,
            ),
            'StreamInventoryChanges': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamInventoryChanges,
                    request_deserializer=inventory__pb2.Empty.FromString,
                    response_serializer=inventory__pb2.InventoryList.SerializeToString,
            ),
            'ReplicateInventory': grpc.unary_unary_rpc_method_handler(
                    servicer.ReplicateInventory,
                    request_deserializer=inventory__pb2.UpdateRequest.FromString,
                    response_serializer=inventory__pb2.Empty.SerializeToString,
            ),
            'Heartbeat': grpc.unary_unary_rpc_method_handler(
                    servicer.Heartbeat,
                    request_deserializer=inventory__pb2.HeartbeatRequest.FromString,
                    response_serializer=inventory__pb2.HeartbeatResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'inventory.InventoryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InventoryService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/inventory.InventoryService/GetInventory',
            inventory__pb2.Empty.SerializeToString,
            inventory__pb2.InventoryList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/inventory.InventoryService/UpdateInventory',
            inventory__pb2.UpdateRequest.SerializeToString,
            inventory__pb2.UpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamInventoryChanges(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/inventory.InventoryService/StreamInventoryChanges',
            inventory__pb2.Empty.SerializeToString,
            inventory__pb2.InventoryList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReplicateInventory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/inventory.InventoryService/ReplicateInventory',
            inventory__pb2.UpdateRequest.SerializeToString,
            inventory__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Heartbeat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/inventory.InventoryService/Heartbeat',
            inventory__pb2.HeartbeatRequest.SerializeToString,
            inventory__pb2.HeartbeatResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
