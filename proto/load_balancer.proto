syntax = "proto3";

package loadbalancer;

import "user_cart.proto";
import "inventory.proto";

service LoadBalancerService {
  // User authentication and management
  rpc Login(usercart.LoginRequest) returns (usercart.LoginResponse);
  rpc CreateAccount(usercart.CreateAccountRequest) returns (usercart.CreateAccountResponse);
  
  // Cart operations
  rpc AddToCart(LoadBalancerCartRequest) returns (usercart.CartResponse);
  rpc RemoveFromCart(LoadBalancerCartRequest) returns (usercart.CartResponse);
  rpc GetCart(usercart.UserRequest) returns (usercart.CartResponse);
  rpc Checkout(usercart.UserRequest) returns (usercart.CheckoutResponse);
  
  // Inventory operations
  rpc GetInventory(inventory.Empty) returns (inventory.InventoryList);
  rpc UpdateInventory(LoadBalancerInventoryRequest) returns (inventory.UpdateResponse);
  
  // Replication between load balancers
  rpc ReplicateShardMapping(ShardMappingRequest) returns (Empty);
  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);
}

message LoadBalancerCartRequest {
  int32 user_id = 1;
  int32 inventory_id = 2;
  int32 quantity = 3;
  string username = 4;
}

message LoadBalancerInventoryRequest {
  int32 inventory_id = 1;
  int32 quantity_change = 2;
  int32 user_id = 3;  // For authorization purposes
}

message ShardMappingRequest {
  int32 user_id = 1;
  int32 shard_id = 2;
}

message HeartbeatRequest {
  string host = 1;
  int32 port = 2;
}

message HeartbeatResponse {
  bool is_leader = 1;
}

message Empty {}